name: "Setup ccache"

inputs:
  MATRIX_OS:
    description: ''
    required: true
  MATRIX_ARCH:
    description: ''
    required: true
  EXTRA_KEY:
    description: ''
    required: false
  WORKSPACE_ROOT:
    description: 'workspace root to place ccache cache'
    required: true

outputs:
  ORIG_HOST_CCACHE_DIR:
    description: ''
    value: ${{ steps.configure_ccache_dir_on_host.outputs.ORIG_HOST_CCACHE_DIR }}

description: ''

runs:
  using: "composite"
  steps:
    - name: CWD to workspace_root
      shell: bash
      run: |
        
        cd "${{ inputs.WORKSPACE_ROOT }}"
    
    - name: ccache
      uses: hendrikmuhs/ccache-action@v1.2.12
      with:
        key: ${{ inputs.MATRIX_OS }}-${{ inputs.MATRIX_ARCH }}-${{ inputs.EXTRA_KEY }}
        max-size: "1G"
        verbose: 2
        variant: ccache

    - name: Configure ccache dir on host
      working-directory: ${{ inputs.WORKSPACE_ROOT }}
      shell: bash
      id: configure_ccache_dir_on_host
      run: |
        
        shopt -s dotglob
        
        WORKSPACE_ROOT="${{ inputs.WORKSPACE_ROOT }}"
        if [[ "${{ inputs.MATRIX_OS }}" == *"windows"* ]]; then
          WORKSPACE_ROOT=$(cygpath -u $WORKSPACE_ROOT)
        fi
        
        # ccache-action sets this to path.join(ghWorkSpace, '.ccache')
        # https://github.com/hendrikmuhs/ccache-action/blob/c92f40bee50034e84c763e33b317c77adaa81c92/src/restore.ts#L53C54-L53C87
        ORIG_HOST_CCACHE_DIR="$(ccache --get-config cache_dir)"
        BASH_ORIG_HOST_CCACHE_DIR=$ORIG_HOST_CCACHE_DIR
        if [[ "${{ inputs.MATRIX_OS }}" == *"windows"* ]]; then
          BASH_ORIG_HOST_CCACHE_DIR=$(cygpath -u $ORIG_HOST_CCACHE_DIR)
        fi
        echo "ORIG_HOST_CCACHE_DIR=$BASH_ORIG_HOST_CCACHE_DIR" | tee -a $GITHUB_OUTPUT
        HOST_CCACHE_DIR="$WORKSPACE_ROOT/.ccache"
        echo "HOST_CCACHE_DIR=$HOST_CCACHE_DIR"
        
        if [[ x"$ORIG_HOST_CCACHE_DIR" != x"$HOST_CCACHE_DIR" ]]; then
          mv $ORIG_HOST_CCACHE_DIR "$WORKSPACE_ROOT/"
        fi
        
        if [[ "${{ inputs.MATRIX_OS }}" == *"windows"* ]]; then
          HOST_CCACHE_DIR=$(cygpath -w $HOST_CCACHE_DIR)
        fi
        ccache --set-config=cache_dir="$HOST_CCACHE_DIR"
        
    - name: Configure ccache
      working-directory: ${{ inputs.WORKSPACE_ROOT }}
      if: contains(inputs.MATRIX_OS, 'ubuntu') || contains(inputs.MATRIX_OS, 'macos')
      shell: bash
      run: |
        
        if [ x"${{ contains(inputs.MATRIX_OS, 'macos') }}" == x"true" ]; then
          echo "/usr/local/opt/ccache/libexec:/opt/homebrew/opt/ccache/libexec" >> $GITHUB_PATH
        else
          echo "/usr/lib/ccache:/usr/lib64/ccache:/usr/lib/ccache/bin" >> $GITHUB_PATH
        fi

    - name: Configure ccache
      working-directory: ${{ inputs.WORKSPACE_ROOT }}
      shell: bash
      run: |
        
        HOST_CCACHE_DIR="$(ccache --get-config cache_dir)"
        if [[ "${{ inputs.MATRIX_OS }}" == *"windows"* ]]; then
          HOST_CCACHE_DIR=$(cygpath -u $HOST_CCACHE_DIR)
        fi
        ls -lah $HOST_CCACHE_DIR

        ccache -p
        ccache -z
        # See https://github.com/hendrikmuhs/ccache-action/issues/146
        ccache --set-config=compiler_check=content
        ccache --set-config=sloppiness=locale,time_macros
