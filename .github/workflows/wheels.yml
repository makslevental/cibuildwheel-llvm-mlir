name: Wheels

on:
  workflow_dispatch:
    inputs:
      mlir_commit:
        description: 'mlir commit'
        type: string
        required: false
        default: ''

  pull_request:
  workflow_run:
    workflows: ["Distro"]
    types:
      - completed

jobs:

  build:
    continue-on-error: true

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-20.04
            arch: x86_64

          - os: ubuntu-20.04
            arch: aarch64

          - os: ubuntu-20.04
            arch: x86_64
            build_cuda: true

          - os: ubuntu-20.04
            arch: x86_64
            build_vulkan: true

          - os: ubuntu-20.04
            arch: x86_64
            build_openmp: true

          - os: windows-2019
            arch: AMD64

          - os: macos-11
            arch: x86_64

          - os: macos-11
            arch: arm64

          - os: macos-11
            arch: arm64
            build_vulkan: true

          - os: macos-11
            arch: arm64
            build_openmp: true
    steps:
      - name: Free disk space
        if: contains(matrix.os, 'ubuntu')
        uses: jlumbroso/free-disk-space@76866dbe54312617f00798d1762df7f43def6e5c # v1.2.0
        with:
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: false # This frees space on the wrong partition.
          tool-cache: false # This includes Python, which we need.

      - uses: actions/checkout@v3

      - uses: ilammy/msvc-dev-cmd@v1.4.1
        if: ${{ matrix.os == 'windows-2019' }}

      - name: Set up Visual Studio shell
        if: ${{ matrix.os == 'windows-2019' }}
        uses: egor-tensin/vs-shell@v2
        with:
          arch: x64

      - name: MS Build
        if: ${{ matrix.os == 'windows-2019' }}
        uses: microsoft/setup-msbuild@v1.1

      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2.9
        with:
          key: ${{ github.job }}-${{ matrix.os }}-${{ matrix.arch }}  # Make cache specific to OS
          max-size: "5G"

      - name: Configure ccache dir on host
        id: configure_ccache_dir_on_host
        if: ${{ matrix.os == 'ubuntu-20.04' }}
        run: |
          HOST_CCACHE_DIR="$(ccache --get-config cache_dir)"
          mkdir -p $HOST_CCACHE_DIR
          echo "HOST_CCACHE_DIR=$HOST_CCACHE_DIR" | tee -a $GITHUB_OUTPUT

      - name: cibuildwheel python bindings
        if: ${{ matrix.os != 'ubuntu-20.04' || matrix.arch != 'aarch64' }}
        shell: bash
        run: |
          cp -R scripts python_bindings/scripts
          
          pushd python_bindings
          
          pip install cibuildwheel
          
          MATRIX_OS=${{ matrix.os }} \
          CIBW_ARCHS=${{ matrix.arch }} \
          HOST_CCACHE_DIR=${{ steps.configure_ccache_dir_on_host.outputs.HOST_CCACHE_DIR }} \
          BUILD_CUDA=${{ matrix.build_cuda }} \
          BUILD_OPENMP=${{ matrix.build_openmp }} \
          BUILD_VULKAN=${{ matrix.build_vulkan }} \
          MLIR_COMMIT=${{ inputs.mlir_commit }} \
          CMAKE_GENERATOR=Ninja \
          cibuildwheel --output-dir ../wheelhouse
          
          popd

      - name: cibuildwheel python bindings aarch64 cp310
        uses: uraimo/run-on-arch-action@v2
        if: ${{ matrix.os == 'ubuntu-20.04' && matrix.arch == 'aarch64' }}
        with:
          arch: ${{ matrix.arch }}
          distro: ubuntu20.04
          dockerRunArgs: |
            --volume "${PWD}:/workspace"
          install: |
            apt-get update -q -y
            apt-get install -q -y ninja-build build-essential cmake python3 python3-pip python-is-python3 curl
            curl -fsSL test.docker.com -o get-docker.sh && sh get-docker.sh
            usermod -aG docker root
            pip install cibuildwheel
          run: |
            cd /workspace
            
            HOST_CCACHE_DIR=/workspace/.ccache
            ls -l $HOST_CCACHE_DIR
            
            cp -R scripts python_bindings/
            
            pushd python_bindings
            
            MATRIX_OS=${{ matrix.os }} \
            CIBW_ARCHS=${{ matrix.arch }} \
            HOST_CCACHE_DIR=$HOST_CCACHE_DIR \
            BUILD_CUDA=${{ matrix.build_cuda }} \
            BUILD_OPENMP=${{ matrix.build_openmp }} \
            BUILD_VULKAN=${{ matrix.build_vulkan }} \
            MLIR_COMMIT=${{ inputs.mlir_commit }} \
            CMAKE_GENERATOR=Ninja \
            CIBW_BUILD=cp310-manylinux_aarch64 \
            cibuildwheel --output-dir ../wheelhouse
            
            popd

            # cp -a ./wheelhouse/.ccache/. /.ccache/

      - name: Upload wheels
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          path: wheelhouse/*.whl
          name: build_artifact_python_bindings

      - name: cibuildwheel python bindings aarch64 cp311
        uses: uraimo/run-on-arch-action@v2
        if: ${{ matrix.os == 'ubuntu-20.04' && matrix.arch == 'aarch64' }}
        with:
          arch: ${{ matrix.arch }}
          distro: ubuntu20.04
          dockerRunArgs: |
            --volume "${PWD}:/workspace"
          install: |
            apt-get update -q -y
            apt-get install -q -y ninja-build build-essential cmake python3 python3-pip python-is-python3 curl
            curl -fsSL test.docker.com -o get-docker.sh && sh get-docker.sh
            usermod -aG docker root
            pip install cibuildwheel
          run: |
            cd /workspace
            
            HOST_CCACHE_DIR=/workspace/.ccache
            ls -l $HOST_CCACHE_DIR
            
            cp -R scripts python_bindings/
            
            pushd python_bindings
            
            MATRIX_OS=${{ matrix.os }} \
            CIBW_ARCHS=${{ matrix.arch }} \
            HOST_CCACHE_DIR=$HOST_CCACHE_DIR \
            BUILD_CUDA=${{ matrix.build_cuda }} \
            BUILD_OPENMP=${{ matrix.build_openmp }} \
            BUILD_VULKAN=${{ matrix.build_vulkan }} \
            MLIR_COMMIT=${{ inputs.mlir_commit }} \
            CMAKE_GENERATOR=Ninja \
            CIBW_BUILD=cp311-manylinux_aarch64 \
            cibuildwheel --output-dir ../wheelhouse
            
            popd

            # cp -a ./wheelhouse/.ccache/. /.ccache/

      - name: Upload wheels
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          path: wheelhouse/*.whl
          name: build_artifact_python_bindings


  upload_bindings_wheels:
    needs: build

    runs-on: ubuntu-latest
    #    environment: pypi
    #    if: github.event_name == 'release' && github.event.action == 'published'
    permissions:
      id-token: write
      contents: write
    steps:
      - uses: actions/download-artifact@v3
        with:
          # unpacks default artifact into dist/
          # if `name: artifact` is omitted, the action will create extra parent dir
          name: build_artifact_python_bindings
          path: dist

      - name: Release current commit
        uses: ncipollo/release-action@v1.12.0
        with:
          artifacts: "dist/*.whl"
          token: "${{ secrets.GITHUB_TOKEN }}"
          tag: "latest"
          name: "latest"
          removeArtifacts: false
          allowUpdates: true
          replacesArtifacts: true
          makeLatest: true

      - name: Release current commit
        uses: ncipollo/release-action@v1.12.0
        with:
          owner: makslevental
          repo: wheels
          artifacts: "dist/*.whl"
          token: "${{ secrets.WHEELS_REPO }}"
          tag: "i"
          name: "i"
          removeArtifacts: false
          allowUpdates: true
          replacesArtifacts: true
          makeLatest: true
